/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-05-17 02:10:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.apache.log4j.Logger;

public final class testForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/com/common.jsp", Long.valueOf(1652679496000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.apache.log4j.Logger");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("    ");
      out.write('\n');
      out.write('\n');

//context path
String contPath = request.getContextPath();
Logger LOG = Logger.getLogger(this.getClass());

//http 1.1에서 지원하는 헤더: 웹브라우저가 응답결과를 캐시하지 않음
response.setHeader("Cache-Control", "no-cache");

//웹브라우저가 응답결과를 캐시하지 않음(앞/뒤로 가기 no-cache)
response.setHeader("Cache-Control","no-store");

//http 1.0에서 지원하는 헤더: 웹 브라우저가 응답결과를 캐시하지 않음
response.setHeader("Pragma","no-cache");

//http 1.0에서 현재시간 이전으로 캐시하지 않음
response.setHeader("Expires","1L");

      out.write("\n");
      out.write("    ");

    LOG.debug("contPath:" +contPath);
    
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"");
      out.print(contPath );
      out.write("/favicon.ico\">\n");
      out.write("\n");
      out.write("<!--reset 스타일 시트 -->\n");
      out.write("<!-- link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(contPath );
      out.write("/asset/css/reset.css\" -->\n");
      out.write("<link rel=\"stylesheet\"  type=\"text/css\" href=\"");
      out.print(contPath );
      out.write("/asset/css/jQuery-ui.css\">\n");
      out.write("<!--스타일 시트 -->\n");
      out.write("<style type=\"text/css\">\n");
      out.write("</style>\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<!-- jquery -->\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(contPath );
      out.write("/asset/js/jquery-1.12.4.js\"></script>\n");
      out.write("<!-- jQuery UI -->\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(contPath );
      out.write("/asset/js/jQuery-ui.js\"></script>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<h2>view->controller call</h2>\n");
      out.write("<hr/>\n");
      out.write("<div>\n");
      out.write("    <input type=\"button\" value=\"전송\" onclick=\"doSave();\"> \n");
      out.write("    </div>\n");
      out.write("    <form action=\"");
      out.print(contPath );
      out.write("/board/board.do\" name=\"boardFrm\" id=\"boardFrm\" >\n");
      out.write("         작업구분 : <input type=\"text\" name=\"work_div\" id=\"work_div\" value=\"doRetrieve\"><br>\n");
      out.write("      \n");
      out.write("    </form>\n");
      out.write("    \n");
      out.write("    <script type=\"text/javascript\">\n");
      out.write("$(document).ready(function(){\n");
      out.write("    console.log(`document ready`);\n");
      out.write("});\n");
      out.write("function doSave(){\n");
      out.write("    console.log(`doSave()`);\n");
      out.write("    let frm = document.getElementById(\"boardFrm\");\n");
      out.write("    frm.submit();\n");
      out.write("    \n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
